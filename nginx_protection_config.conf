# Пример конфигурации Nginx для защиты от DDoS на основе результатов тестирования
# Разместите в /etc/nginx/nginx.conf или в отдельном файле в /etc/nginx/conf.d/

# Ограничение количества соединений с одного IP
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_conn_zone $server_name zone=perserver:10m;

# Ограничение частоты запросов (Rate Limiting)
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=1r/s;

# Ограничение размера тела запроса
client_max_body_size 10M;
client_body_buffer_size 128k;

# Таймауты
client_body_timeout 12;
client_header_timeout 12;
keepalive_timeout 15;
send_timeout 10;

# Оптимизация производительности
worker_processes auto;
worker_connections 4096;
worker_rlimit_nofile 65535;

events {
    use epoll;
    worker_connections 4096;
    multi_accept on;
}

http {
    # Базовые настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 15;
    types_hash_max_size 2048;
    server_tokens off;

    # Кэширование
    open_file_cache max=10000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml font/truetype font/opentype 
               application/vnd.ms-fontobject image/svg+xml;

    # Защита от DDoS
    server {
        listen 80;
        listen [::]:80;
        server_name your-domain.com;

        # Ограничение соединений
        limit_conn conn_limit_per_ip 20;
        limit_conn perserver 1000;

        # Rate Limiting
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        limit_req_status 429;

        # Блокировка подозрительных User-Agent
        if ($http_user_agent ~* (bot|crawler|spider)) {
            return 403;
        }

        # Ограничение методов
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 444;
        }

        # Защита от Slowloris атак
        client_body_timeout 10;
        client_header_timeout 10;

        # Защита от больших заголовков
        large_client_header_buffers 4 32k;
        client_header_buffer_size 8k;

        # Блокировка пустых User-Agent
        if ($http_user_agent = "") {
            return 403;
        }

        # Локация для основной директории
        location / {
            root /var/www/html;
            index index.html index.htm;
            
            # Rate Limiting для конкретной локации
            limit_req zone=req_limit_per_ip burst=10 nodelay;
            
            # Кэширование статики
            location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
        }

        # Защита логина (более строгий rate limit)
        location /login {
            limit_req zone=login_limit burst=3 nodelay;
            proxy_pass http://backend;
        }

        # Защита API
        location /api/ {
            limit_req zone=req_limit_per_ip burst=5 nodelay;
            proxy_pass http://backend;
        }

        # Блокировка определенных путей
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}

# Пример для HTTPS (SSL)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name your-domain.com;
#
#     ssl_certificate /path/to/cert.pem;
#     ssl_certificate_key /path/to/key.pem;
#
#     # Те же настройки защиты...
# }

